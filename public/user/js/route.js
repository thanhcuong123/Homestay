function openRoutePopup(endLat, endLon) {
    document.getElementById("routePopup").style.display = "block";

    document.getElementById("routePopup").setAttribute("data-end-lat", endLat);
    document.getElementById("routePopup").setAttribute("data-end-lon", endLon);
}

function closeRoutePopup() {
    document.getElementById("routePopup").style.display = "none";
}


document.getElementById("startLocation").addEventListener("change", function () {
    let input = document.getElementById("manualInput");
    input.style.display = this.value === "manual" ? "block" : "none";
});

function calculateRoute() {
    let startOption = document.getElementById("startLocation").value;
    let startLocation = "";

    // L·∫•y t·ªça ƒë·ªô homestay t·ª´ popup
    let endLat = document.getElementById("routePopup").getAttribute("data-end-lat");
    let endLon = document.getElementById("routePopup").getAttribute("data-end-lon");
    let homestayLocation = `${endLon},${endLat}`;

    if (startOption === "current") {
        navigator.geolocation.getCurrentPosition((position) => {
            startLocation = `${position.coords.longitude},${position.coords.latitude}`;
            console.log("üìç B·∫Øt ƒë·∫ßu t·ª´ v·ªã tr√≠ hi·ªán t·∫°i:", startLocation);
            drawRoute(startLocation, homestayLocation);
        });
    } else if (startOption === "manual") {
        startLocation = document.getElementById("manualInput").value;
        console.log("üìç B·∫Øt ƒë·∫ßu t·ª´:", startLocation);
        drawRoute(startLocation, homestayLocation);
    } else {
        console.log("ch∆∞a m·∫ßn nha n√≠");
    }
}

function drawRoute(startLocation, homestayLocation) {
    console.log("üìç V·∫Ω tuy·∫øn ƒë∆∞·ªùng t·ª´:", startLocation, "ƒë·∫øn:", homestayLocation);

    fetch(
        `https://api.mapbox.com/directions/v5/mapbox/driving/${startLocation};${homestayLocation}?geometries=geojson&access_token=${mapboxgl.accessToken}`
    )
        .then((response) => response.json())
        .then((data) => {
            if (!data.routes || data.routes.length === 0) {
                console.error("‚ùå Kh√¥ng t√¨m th·∫•y tuy·∫øn ƒë∆∞·ªùng!");
                return;
            }

            const route = data.routes[0];
            const routeCoords = route.geometry.coordinates;
            const duration = Math.round(route.duration / 60); // Th·ªùi gian di chuy·ªÉn (ph√∫t)

            // X√≥a tuy·∫øn ƒë∆∞·ªùng c≈© n·∫øu c√≥
            if (map.getSource("route")) {
                map.removeLayer("route");
                map.removeSource("route");
            }

            // Th√™m tuy·∫øn ƒë∆∞·ªùng m·ªõi
            map.addSource("route", {
                type: "geojson",
                data: {
                    type: "Feature",
                    geometry: {
                        type: "LineString",
                        coordinates: routeCoords,
                    },
                },
            });

            map.addLayer({
                id: "route",
                type: "line",
                source: "route",
                layout: {
                    "line-join": "round",
                    "line-cap": "round",
                },
                paint: {
                    "line-color": "#eb0707",
                    "line-width": 5,
                },
            });

            console.log(`üïí ∆Ø·ªõc t√≠nh th·ªùi gian di chuy·ªÉn: ${duration} ph√∫t`);
            document.getElementById(
                "routeInfo"
            ).innerHTML = `<p>üöó Th·ªùi gian ∆∞·ªõc t√≠nh: <strong>${duration} ph√∫t</strong></p>`;
        })
        .catch((error) => console.error("L·ªói khi t√¨m ƒë∆∞·ªùng:", error));
}
